<!-- $fpostに$_SESSION['contact']を格納していないけど動作してる -->

<?php
/* ---------------------------
  お問い合わせフォーム 設定
--------------------------- */

$reqst_post = ($_SERVER["REQUEST_METHOD"] === 'POST') ? true : false;

// データ送信時(submit) 一時保管
function restoreTxt($target, $slug)
{
  global $fpost;
  if (isset($_SESSION[$slug])) {
    return htmlspecialchars($_SESSION[$slug][$target]);
  } else {
    return htmlspecialchars($fpost[$target]);
  }
}

// セレクトボックスの値を復元する関数
function restoreSelect($target, $slug, $value)
{
  global $fpost;
  if (isset($_SESSION[$slug]) && $_SESSION[$slug][$target] == $value) {
    return 'selected';
  } elseif (isset($fpost[$target]) && $fpost[$target] == $value) {
    return 'selected';
  } else {
    return '';
  }
}


// エラーメッセージ生成
function createErrMsg($ipt_name)
{
  global $errors;
  if (isset($errors[$ipt_name])) {

    echo '<p class="error">' . $errors[$ipt_name] . '</p>';
  }
}


if ($reqst_post) {
  $errors = [];
  $fpost = $_POST;

  if (empty($fpost['yourname'])) {
    $errors['yourname'] = '氏名を入力してください。';
  }

  if (empty($fpost['yourruby'])) {
    $errors['yourruby'] = 'フリガナを入力ください。';
  }

  // メールアドレス入力
  if (empty($fpost['youremail'])) {
    $errors['youremail'] = 'メールアドレスを入力してください。';
  } elseif (!filter_var($fpost['youremail'], FILTER_VALIDATE_EMAIL)) {
    $errors['youremail'] = '正しいメールアドレスを入力してください。';
  }

  // メールアドレス再入力
  if (empty($fpost['emailagain'])) {
    $errors['emailagain'] = '確認用のメールアドレスを入力してください。';
  } else if (!empty($fpost['emailagain'])) {

    $youremail = isset($_POST['youremail']) ? trim($_POST['youremail']) : '';
    $emailagain = isset($_POST['emailagain']) ? trim($_POST['emailagain']) : '';

    // 両方入力されている場合に一致性を確認
    if ($youremail != $emailagain) {
      $errors['emailagain'] = "確認用のメールアドレスが一致していません。";
    }
  }

  if (empty($fpost['yourtel'])) {
    $errors['yourtel'] = '電話番号を入力してください。';
  } else if (!empty($fpost['yourtel'])) {
    $tel = $fpost['yourtel']; // 統一

    // 各種電話番号パターン
    $patterns = [
      '/^\d{10}$/', // 市外局番(10桁)
      '/^\d{11}$/', // 携帯電話(11桁)
      '/^\d{2,4}-\d{3,5}-\d{4}$/' // 市外局番2-4桁、市内局番3-5桁、加入者番号4桁
    ];

    // ハイフンが2個以下かつ、数字とハイフンのみで構成されているかチェック (12桁または13桁の場合)
    if (preg_match('/^\d{12,13}$/', $tel) && !preg_match('/^[0-9-]{12,13}$/D', $tel) || preg_match('/-.*-.*-/', $tel)) {

      $errors['yourtel'] = '電話番号を入力してください。';
      return;
    }

    // いずれかのパターンにマッチするかチェック
    $isValid = false;
    foreach ($patterns as $pattern) {
      if (preg_match($pattern, $tel)) {
        $isValid = true;
        break;
      }
    }

    if (!$isValid) {
      $errors['yourtel'] = '電話番号を入力してください。';
    }
  }

  if (empty($fpost['yourage'])) {
    $errors['yourage'] = '年齢を入力してください。';
  }

  if (empty($errors)) {
    echo '<p>お問い合わせありがとうございました。</p>';
  } else {
    createErrMsg($errors);
  }
  // }
  // } elseif (is_page('confirm')) {
  //   // URLでの不正アクセスリダイレクト
  //   if (empty($_SESSION['contact'])) wp_redirect(home_url('/contact/'));

  // $fpost = $_SESSION['contact'];

  if ($reqst_post) {
    // セッションからデータを取得
    $contact_company = sanitize_text_field($fpost['contact_company']);
    $contact_name = sanitize_text_field($fpost['contact_name']);
    $contact_kana = sanitize_text_field($fpost['contact_kana']);
    $contact_address = sanitize_text_field($fpost['contact_address']);
    $contact_mail = sanitize_email($fpost['contact_mail']);
    $contact_tel = sanitize_text_field($fpost['contact_tel']);
    $content = sanitize_text_field($fpost['content']);

    // メールの送信
    $to = $contact_mail;
    $subject = '【くるまの窓口】お問い合わせありがとうございます';

    $body = [];
    $body[] =
      '下記の内容にてお問い合わせを承りました。' . "\n\n\n" .
      '-------お問い合わせ内容------------------------------------------' . "\n\n" .
      '法人名：' . htmlspecialchars($contact_company, ENT_QUOTES, 'UTF-8') . "\n" .
      '氏名：' . htmlspecialchars($contact_name, ENT_QUOTES, 'UTF-8') . "\n" .
      'フリガナ：' . htmlspecialchars($contact_kana, ENT_QUOTES, 'UTF-8') . "\n" .
      '住所：' . htmlspecialchars($contact_address, ENT_QUOTES, 'UTF-8') . "\n" .
      'メールアドレス：' . htmlspecialchars($contact_mail, ENT_QUOTES, 'UTF-8') . "\n" .
      '電話番号：' . htmlspecialchars($contact_tel, ENT_QUOTES, 'UTF-8') . "\n" .
      'お問い合わせ内容：' . htmlspecialchars($content, ENT_QUOTES, 'UTF-8') . "\n" .
      '----------------------------------------------------------------' . "\n\n";

    // 配列を改行で結合して本文を生成
    $body_message = implode("\n", $body);

    $headers = array('Content-Type: text/plain; charset=UTF-8');

    wp_mail($to, $subject, $body_message, $headers); // ユーザ宛
    wp_mail('t.sato@felixjapan.net', $subject, $body_message, $headers); // 管理者宛

    // セッション終了
    session_unset();
    session_destroy();
    // wp_redirect(home_url());
  }
}
// elseif (is_page('complete')) {
//   if (empty($_GET['submitted'])) wp_redirect(home_url('/contact/'));
// }
